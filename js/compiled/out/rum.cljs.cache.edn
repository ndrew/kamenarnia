;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name rum, :imports nil, :requires {cljsjs.react cljsjs.react, sablono.core sablono.core}, :uses nil, :defs {reactive-key {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 216, :column 8, :end-line 216, :end-column 20, :private true, :arglists (quote ([state]))}, :private true, :name rum/reactive-key, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, mount {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 152, :column 7, :end-line 152, :end-column 12, :arglists (quote ([component node]))}, :name rum/mount, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 12, :method-params ([component node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component node]))}, render->mixin {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 157, :column 7, :end-line 157, :end-column 20, :arglists (quote ([render-fn]))}, :name rum/render->mixin, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 20, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, compare-by {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 133, :column 7, :end-line 133, :end-column 17, :arglists (quote ([keyfn]))}, :name rum/compare-by, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 17, :method-params ([keyfn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keyfn]))}, call-all {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 24, :column 8, :end-line 24, :end-column 16, :private true, :arglists (quote ([state fns & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}}, :private true, :name rum/call-all, :variadic true, :file "resources/public/js/compiled/out/rum.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}, :method-params [(state fns args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists ([state fns & args])}, cursored {:name rum/cursored, :file "resources/public/js/compiled/out/rum.cljs", :line 324, :column 1, :end-line 324, :end-column 14, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 324, :column 6, :end-line 324, :end-column 14}}, local {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 193, :column 7, :end-line 193, :end-column 12, :arglists (quote ([initial & [key]])), :doc "Adds an atom to component’s state that can be used as local state.\n   Atom is stored under key `:rum/local`.\n   Component will be automatically re-rendered if atom’s value changes", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(initial [key])], :arglists ([initial & [key]]), :arglists-meta (nil)}}, :name rum/local, :variadic true, :file "resources/public/js/compiled/out/rum.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(initial [key])], :arglists ([initial & [key]]), :arglists-meta (nil)}, :method-params [(initial [key])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists ([initial & [key]]), :doc "Adds an atom to component’s state that can be used as local state.\n   Atom is stored under key `:rum/local`.\n   Component will be automatically re-rendered if atom’s value changes"}, reactive {:name rum/reactive, :file "resources/public/js/compiled/out/rum.cljs", :line 219, :column 1, :end-line 219, :end-column 14, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 219, :column 6, :end-line 219, :end-column 14}}, args->state {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 166, :column 7, :end-line 166, :end-column 18, :arglists (quote ([args]))}, :name rum/args->state, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 18, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args]))}, cursored-key {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 338, :column 8, :end-line 338, :end-column 20, :private true, :arglists (quote ([state]))}, :private true, :name rum/cursored-key, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, react {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 249, :column 7, :end-line 249, :end-column 12, :arglists (quote ([ref]))}, :name rum/react, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 12, :method-params ([ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ref]))}, schedule {:name rum/schedule, :file "resources/public/js/compiled/out/rum.cljs", :line 125, :column 1, :end-line 125, :end-column 14, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 125, :column 6, :end-line 125, :end-column 14}}, request-render {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 147, :column 7, :end-line 147, :end-column 21, :arglists (quote ([component]))}, :name rum/request-render, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 21, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, render-queue {:name rum/render-queue, :file "resources/public/js/compiled/out/rum.cljs", :line 138, :column 1, :end-line 138, :end-column 18, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 138, :column 6, :end-line 138, :end-column 18}}, deref-args {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 320, :column 8, :end-line 320, :end-column 18, :private true, :arglists (quote ([xs]))}, :private true, :name rum/deref-args, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 18, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 320, :end-line 320, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, element {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 169, :column 7, :end-line 169, :end-column 14, :arglists (quote ([class state & [props]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(class state [props])], :arglists ([class state & [props]]), :arglists-meta (nil)}}, :name rum/element, :variadic true, :file "resources/public/js/compiled/out/rum.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(class state [props])], :arglists ([class state & [props]]), :arglists-meta (nil)}, :method-params [(class state [props])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists ([class state & [props]])}, with-key {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 177, :column 7, :end-line 177, :end-column 15, :arglists (quote ([element key]))}, :name rum/with-key, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 15, :method-params ([element key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element key]))}, next-id {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 10, :column 9, :end-line 10, :end-column 16, :arglists (quote ([]))}, :name rum/next-id, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *reactions* {:name rum/*reactions*, :file "resources/public/js/compiled/out/rum.cljs", :line 214, :column 1, :end-line 214, :end-column 27, :dynamic true, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 214, :column 16, :end-line 214, :end-column 27, :dynamic true}}, render-state->mixin {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 160, :column 7, :end-line 160, :end-column 26, :arglists (quote ([render-fn]))}, :name rum/render-state->mixin, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 26, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, cursored-watch {:name rum/cursored-watch, :file "resources/public/js/compiled/out/rum.cljs", :line 341, :column 1, :end-line 341, :end-column 20, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 341, :column 6, :end-line 341, :end-column 20}}, static {:name rum/static, :file "resources/public/js/compiled/out/rum.cljs", :line 185, :column 1, :end-line 185, :end-column 12, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 185, :column 6, :end-line 185, :end-column 12}}, render-comp->mixin {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 163, :column 7, :end-line 163, :end-column 25, :arglists (quote ([render-fn]))}, :name rum/render-comp->mixin, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 25, :method-params ([render-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([render-fn]))}, cursor {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 308, :column 7, :end-line 308, :end-column 13, :arglists (quote ([ref path]))}, :name rum/cursor, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 13, :method-params ([ref path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 308, :end-line 308, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ref path]))}, state {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([comp]))}, :name rum/state, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 12, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp]))}, with-ref {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 180, :column 7, :end-line 180, :end-column 15, :arglists (quote ([element ref]))}, :name rum/with-ref, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 15, :method-params ([element ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 2, :fn-var true, :arglists (quote ([element ref]))}, render {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 140, :column 7, :end-line 140, :end-column 13, :arglists (quote ([]))}, :name rum/render, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, empty-queue {:name rum/empty-queue, :file "resources/public/js/compiled/out/rum.cljs", :line 137, :column 1, :end-line 137, :end-column 17, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 137, :column 6, :end-line 137, :end-column 17}}, collect {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 19, :column 8, :end-line 19, :end-column 15, :private true, :arglists (quote ([fn-key classes]))}, :private true, :name rum/collect, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 15, :method-params ([fn-key classes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn-key classes]))}, ->LensCursor {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 255, :column 10, :end-line 255, :end-column 20, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref rum/Object cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([parent getter setter]))}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref rum/Object cljs.core/IPrintWithWriter}, :name rum/->LensCursor, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 20, :method-params ([parent getter setter]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 255, :end-line 255, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parent getter setter])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, ctor->class {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 174, :column 7, :end-line 174, :end-column 18, :arglists (quote ([ctor]))}, :name rum/ctor->class, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 18, :method-params ([ctor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctor]))}, id {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 16, :column 7, :end-line 16, :end-column 9, :arglists (quote ([comp]))}, :name rum/id, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 9, :method-params ([comp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comp]))}, build-class {:protocol-inline nil, :meta {:file "/Users/ndrw/МОЄ/kamenarnia/internal/k/resources/public/js/compiled/out/rum.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([classes display-name]))}, :name rum/build-class, :variadic false, :file "resources/public/js/compiled/out/rum.cljs", :end-column 18, :method-params ([classes display-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([classes display-name]))}, LensCursor {:num-fields 3, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref rum/Object cljs.core/IPrintWithWriter}, :name rum/LensCursor, :file "resources/public/js/compiled/out/rum.cljs", :end-column 20, :type true, :column 10, :line 255, :record false, :end-line 255, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}}, :require-macros {rum rum, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:rum/react-component :did-mount :will-unmount :rum/om-args :rum/class :init :child-context :rum/refs :rum/args :rum/id parent :did-update :will-mount :render setter :will-update :context-types :rum/local :wrap-render :child-context-types :should-update getter :transfer-state}, :order [:rum/id :init :will-mount :did-mount :transfer-state :should-update :will-update :render :wrap-render :did-update :will-unmount :child-context-types :child-context :context-types :rum/react-component :rum/args :rum/class :rum/local :rum/refs parent getter setter :rum/om-args]}, :doc nil}